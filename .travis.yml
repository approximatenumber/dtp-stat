language: python
python: "3.7"
dist: xenial
addons:
  postgresql: "10"
  apt:
    packages:
    - postgresql-10
    - postgresql-client-10

jobs:
  include:
    - stage: test
      name: "Testing host environment"
      install:
        - pip install -r requirements.txt
        - npm install -g npx
        - npm install
      env:
        - DATABASE_URL: postgres://django:django@localhost:5432/django
      before_script:
        - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
        - sudo systemctl restart postgresql
        - sleep 1
        - psql -c "CREATE DATABASE django;" -U postgres
        - psql -c "CREATE ROLE django WITH LOGIN PASSWORD 'django';" -U postgres
        - psql -c "ALTER ROLE django CREATEDB;" -U postgres
        - psql -c "GRANT ALL PRIVILEGES ON DATABASE django TO django;" -U postgres
        - echo "Starting server"
        - python manage.py migrate
        - python manage.py createcachetable
        - python manage.py runserver localhost:8000 &
        - SERVER_PID=$!
        - sleep 5
      script:
        - curl --head localhost:8000
      after_script: kill -SIGTERM $SERVER_PID || echo "Process $SERVER_PID not running"

    - stage: test
      name: "Testing dockerized environment"
      env:
        - DATABASE_URL: postgres://django:django@db:5432/django
      before_script:
        - cp docker/.dockerenv.example docker/.dockerenv
        - sed -i 's/DEBUG=.*/DEBUG=true/' docker/.dockerenv
      script:
        - docker-compose build
        - docker-compose up -d db
        - docker-compose run -T app sh -c 'until $(nc -w 1 db 5432); do echo "Waiting for database..."; sleep 5; done'
        - docker-compose up -d app
        # we need to wait some time for container initialization
        - APP_RUNNING=;
          while [[ -z $APP_RUNNING ]]; do
            for i in $(seq 10); do
              curl --head localhost:8000 2>/dev/null &&
              APP_RUNNING=yes &&
              break || echo "Waiting for app...";
              sleep 5;
            done;
          done
      after_success: docker-compose stop
env:
  global:
    - DEBUG: true
    - SECRET_KEY: "THIS_IS_VERY_SECRET_KEY_HERE"
