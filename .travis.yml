language: python
python: "3.7"
dist: xenial
addons:
  postgresql: "10"
  apt:
    packages:
    - postgresql-10
    - postgresql-client-10

install:
  - pip install -r requirements.txt
  - npm install -g npx
  - npm install
  # database preparing
  - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
  - sudo systemctl restart postgresql
  - sleep 1
  - psql -c "CREATE DATABASE django;" -U postgres
  - psql -c "CREATE ROLE django WITH LOGIN PASSWORD 'django';" -U postgres
  - psql -c "ALTER ROLE django CREATEDB;" -U postgres
  - psql -c "GRANT ALL PRIVILEGES ON DATABASE django TO django;" -U postgres

jobs:
  include:
    - stage: test
      name: "Testing local environment"
      env:
        - DATABASE_URL: postgres://django:django@localhost:5432/django
      before_script:
        - python manage.py migrate
        - python manage.py createcachetable
        - python manage.py runserver localhost:8000 &
        - APP_PID=$!
      script:
        - tests/travis/simple_curl_get.sh
      after_script: kill -SIGTERM $APP_PID || echo "Process $APP_PID not running"

    - stage: test
      name: "Testing parser (local environment)"
      before_script:
        - python manage.py migrate
        - python manage.py createcachetable
        - python manage.py runserver localhost:8000 &
      script:
        - ./parser.py tech_data
        - ./parser.py regions
        - ./parser.py data
      after_script: kill -SIGTERM $APP_PID || echo "Process $APP_PID not running"

    - stage: test
      name: "Testing dockerized environment"
      env:
        - DATABASE_URL: postgres://django:django@db:5432/django
    - APP_HOST: localhost
    - APP_PORT: 8000
      before_script:
        - cp docker/.dockerenv.example docker/.dockerenv
        - sed -i 's/DEBUG=.*/DEBUG=true/' docker/.dockerenv
      script:
        - docker-compose build
        - docker-compose up -d db
        - docker-compose run -T app sh -c 'until $(nc -w 1 db 5432); do echo "Waiting for database..."; sleep 5; done'
        - docker-compose up -d app
        # we need to wait some time for container initialization
        - tests/travis/simple_curl_get.sh
      after_success: docker-compose stop
env:
  global:
    - DEBUG: true
    - SECRET_KEY: "THIS_IS_VERY_SECRET_KEY_HERE"

